version: "3"
services:
  postgres:
    image: postgres:12
    user: "${AIRFLOW_UID}:${AIRFLOW_GID}"
    container_name: postgres
    volumes:
      - ./pg-airflow:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - "5432:5432"
    networks:
      - docker-stack
  olap:
    container_name: ${CONTAINER_NAME}
    image: 'postgres:${PG_VER}'
    hostname: ${HOSTNAME}
    ports:
      - "5434:${PORT}"
    environment:
      restart: always
      POSTGRES_USER: ${POSTGRES_USER_OLAP}
      POSTGRES_PASSWORD: ${POSTGRES_SRC_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_OLAP}  
    #    PGDATA: /var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB_OLAP} -U $${POSTGRES_USER_OLAP}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgres/data:/var/lib/mysql 
      - ./scripts:/scripts
    networks:
      - docker-stack
  
  oltp:
    build:
      context: ./mysql
    restart: always
    environment:
      - MYSQL_DATABASE=${MY_DB_NAME}
      - MYSQL_USER=${MY_DB_USER}
      - MYSQL_PASSWORD=${MY_DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MY_DB_ROOT_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./mysql/data:/var/lib/mysql 
    networks:
      - docker-stack   


  adminer:
    image: adminer:latest
    ports:
    - 8085:8080/tcp
    deploy:
     restart_policy:
       condition: on-failure
    networks:
      - docker-stack  
         
  
  airflow:
    build:
      context: ./airflow/
      dockerfile: Dockerfile
    hostname: webserver
    restart: always
    container_name: airflow
    depends_on:
      - postgres
    command: webserver
    env_file:
      - .env
    volumes:
      - ./dags-airflow:/opt/airflow/dags
      - ./airflow/scripts:/opt/airflow/scripts
      - ./requirements.txt:/opt/airflow/requirements.txt
      
    ports:
      - "8080:8080"
    entrypoint: ./scripts/airflow-entrypoint.sh
    healthcheck:
      test: ["CMD-SHELL", "[ -f /opt/airflow/airflow-webserver.pid ]"]
      interval: 30s
      timeout: 30s
      retries: 32

    networks:
      - docker-stack 

networks:
  docker-stack:  
